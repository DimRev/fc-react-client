name: Release
on:
  push:
    branches:
      - main # or main

permissions:
  contents: read # for checkout

jobs:
  setup:
    name: Install and Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.8.1"

      # Restore node_modules cache before installing dependencies
      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Install pnpm
      - name: Install pnpm 9.0.4
        run: npm install -g pnpm@9.0.4

      # Install dependencies (pnpm)
      - name: Install dependencies
        run: pnpm install

      # Save node_modules cache after installing dependencies
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.8.1"

      # Restore node_modules cache before running tests
      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install pnpm 9.0.4
        run: npm install -g pnpm@9.0.4

      # Install dependencies (pnpm)
      - name: Install dependencies
        run: pnpm install

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Trigger Jenkins Job
        run: |
          curl -X POST \
            -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" \
            "https://jenkins.dimrev.xyz/job/fc-react-client-release/build"
        env:
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_TOKEN: ${{ secrets.JENKINS_TOKEN }}
